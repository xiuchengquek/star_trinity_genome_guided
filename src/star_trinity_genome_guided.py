#!/usr/bin/env python
# star-trinity-genome-guided v0.01
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# See https://wiki.dnanexus.com/Developer-Portal for documentation and
# tutorials on how to modify this file.
#
# DNAnexus Python Bindings (dxpy) documentation:
#   http://autodoc.dnanexus.com/bindings/python/current/

import os
import dxpy
import subprocess


@dxpy.entry_point('main')
def main(left_reads, right_reads, genome_index_dir, insert_size):

    left_reads = dxpy.DXFile(left_reads)
    right_reads = dxpy.DXFile(right_reads)
    genome_index_dir = dxpy.DXFile(genome_index_dir)

    dxpy.download_dxfile(left_reads.get_id(), 'left_reads.bam')
    dxpy.download_dxfile(right_reads.get_id(), 'right_reads.bam')
    dxpy.download_dxfile(genome_index_dir.get_id(), 'genomeDir.tar.gz')

    subprocess(['tar' , '-zxvf' , 'genomeDir.tar.gz'])
    sample_name = left_reads.split('_')[0]
    star_cmd = ['STAR']

    options = ['--runThreadN' , '16',
               '--genomeDir', "genome_index_dir",
               '--readFilesIn', "left_reads.bam", "right_reads.bam",
               '--sjdbOverhang', insert_size,
               '--outSAMtype' , 'BAM' , 'SortedByCoordinate'
               ]

    star_cmd.extend(options)
    star_cmd_str = " ".join(star_cmd)

    subprocess.check_call(star_cmd_str)
    output_name = '%s.out.bam' % sample_name
    os.rename('Aligned.sortedByCoord.out.bam' , output_name)
    output_file = dxpy.upload_local_file(output_name)
    output = {}
    output['output_bam'] = output_file
    return output

dxpy.run()
